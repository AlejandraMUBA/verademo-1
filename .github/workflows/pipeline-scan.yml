name: pipeline-scan 

on: push

jobs:
          
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: mvn clean verify --f app/pom.xml
      - name: Review artifacts
        run: ls app
      - name: Upload war
        uses: actions/upload-artifact@v2
        with:
         name: VeraWar
         path: app/target/verademo.war
  #Pipeline-Scan       
#  Pipeline-Scan:
#    needs: Build
#    runs-on: ubuntu-latest
#    env:
#      SRCCLR_API_TOKEN: "${{secrets.SRCCLR_API_TOKEN}}"
#    steps:
#      - name: Download war
#        uses: actions/download-artifact@v2
#        with:
#          name: VeraWar
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Download the Pipeline Scanner
#        uses: wei/curl@master
#        with:
#          args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
#      - name: Unzip the Pipeline Scanner
#        run: unzip pipeline-scan-LATEST.zip
#      - name: Change permissions
#        run: chmod +x pipeline-scan.jar
#      - name: Change permissions jar
#        run: chmod +x verademo.war
        
# DESCARGAR POLITICA
      #- name: Download policy
      #  run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --request_policy "AppSec-A"

#      - name: Review artifacts
#        run: ls -a
#      - name: Run Pipeline Scanner
      
#SIN POLITICA
       #run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "verademo.war" --fail_on_severity="Very High, High" --fail_on_cwe="95"
  
#CON POLITICA     
       #run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "verademo.war" --policy_file "AppSec-A.json"

#SIN VULNERABILIDADES
#        run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "verademo.war" --fail_on_severity="Very Low"


#Analisis SCA 
#  SCA-Scan:
#    needs: Build
#    runs-on: ubuntu-latest
#    env:
#      SRCCLR_API_TOKEN: "${{secrets.SRCCLR_API_TOKEN}}"
#    steps:
#    - name: Download war
#      uses: actions/download-artifact@v2
#      with: 
#        name: VeraWar
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
#    - name: Checkout repository
#      uses: actions/checkout@v3
#    - name: Running SCA agent Based
#      working-directory: app
#      run: curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan --update-advisor 
      

  
  #Analisis Upload
#  Upload-and-Scan:
#    needs: Build
#    runs-on: ubuntu-latest
#    steps:
#    - name: Download war
#      uses: actions/download-artifact@v2
#      with:
#        name: VeraWar
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
#    - name: Create folder
#      run: mkdir app
#    - name: Move artifact
#      run: mv verademo.war app
#    - name: Upload and scan
#      uses: veracode/veracode-uploadandscan-action@master 
#      with: 
#        appname: 'AlejandraMUBA/verademo-1'
#        createprofile: 'false'
#        filepath: 'app'
#        vid: "${{secrets.VERACODE_API_ID}}"
#        vkey: "${{secrets.VERACODE_API_KEY}}"
#        scantimeout: 15
#        exclude: '*.js'
#        include: '*.war'
#        criticality: 'VeryLow'


  #Analisis DAST ESSENTIALS
  Dast-essentials:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Veracode Action Step DAST
      id: veracode
      uses: veracode/veracode-dast-essentials-action@v1.0.1
      with:
        VERACODE_WEBHOOK: '${{secrets.VERACODE_WEBHOOK}}'
        VERACODE_SECRET_ID: '${{secrets.VERACODE_SECRET_ID}}'
        VERACODE_SECRET_ID_KEY: '${{secrets.VERACODE_SECRET_ID_KEY}}'
        REGION: '${{ secrets.REGION }}'
        pull-report: 'true'
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v1 
      with:
       report_paths: 'report.xml'
       github_token: ${{ secrets.GITHUB_TOKEN }}

env:
  using: 'node20'
  main: 'index.js'
       
  # Container Security 
#  Veracode-container_iac_secrets-scan:
#    needs: Build
#    runs-on: ubuntu-latest
#    name: Veracode Container/IaC/Secrets scan

#    steps:
#      - name: checkout
#        uses: actions/checkout@v3

#      - name: Veracode Container/IaC/Secrets action step
#        uses: veracode/container_iac_secrets_scanning@v1.0.1
#        with:
#          vid: "${{secrets.VERACODE_API_ID}}"
#          vkey: "${{secrets.VERACODE_API_KEY}}"
#          command: "scan" 
#          type: "directory"
#          source: "./"
#          format: "json"
#          debug: false
#          fail_build: true

